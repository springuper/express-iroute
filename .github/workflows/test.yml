name: test

on:
  pull_request:
    paths-ignore:
      - '**.md'
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          always-auth: true
          cache: yarn
          node-version: 16

      - run: |
          yarn install --frozen-lockfile --no-progress

      - run: |
          yarn run lint

  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          always-auth: true
          cache: yarn
          node-version: 16

      - run: |
          yarn install --frozen-lockfile --no-progress

      - run: |
          yarn run test:coverage

      - run: |
          yarn nyc report --exclude-after-remap=false --reporter=lcov

      # upload "lcov.info" from default branch
      - uses: actions/upload-artifact@v3
        continue-on-error: true
        if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
        with:
          if-no-files-found: error
          name: coverage-summary
          path: ./coverage/lcov.info

      # download default branch's "lcov.info" for each pr
      - uses: dawidd6/action-download-artifact@v2
        continue-on-error: true
        if: github.ref != format('refs/heads/{0}', github.event.repository.default_branch) && github.event_name == 'pull_request'
        with:
          branch: ${{ github.event.repository.default_branch }}
          name: coverage-summary
          path: ./coverage/base
          workflow: test.yml

      # generate code coverage report for each pr
      - uses: romeovs/lcov-reporter-action@master
        continue-on-error: true
        id: coverage
        if: github.ref != format('refs/heads/{0}', github.event.repository.default_branch) && github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-base: ./coverage/base/lcov.info
          lcov-file: ./coverage/lcov.info
          working-directory: ./
